name: publish

on:
  workflow_dispatch

jobs:

  build1:
    strategy:
      fail-fast: false
      matrix:
        pkg: [aalib, abook, act, actionlint, adig, ag, age, alacritty, alass, algernon, aliyun-cli, anchor-cli, antibody, aom, apkeep, aptly, archiver, args, aria2, arping, autoconf-archive, automake, autossh, awk, axel, azcopy, b3sum, bandwhich, base16, base64, bash, basis_universal, bat, bazelisk, bcrypt, bdw-gc, bear, berkeley-db, bgrep, binaryen, bind, binocle, bison, bit, bitcoin, bk, blockhash, bmake, boringssl, botan, bottom, boxes, brook, broot, brotli, bsdtar, bullet, byacc, bzip2, c-examples, caddy, caf, cargo-c, cargo-deb, catch2, catimg, cbindgen, ccache, cereal, cflow, cgal, chafa, cheat, check, chezmoi, chicken, chinese-calendar, chisel, choose, chrome-cli, cilium-cli, cli11, clog, cmake, cmark, cmatrix, code-cli, coreutils, cotp, cpio, cpp-httplib, cppcheck, cppunit, cpu_features, cpuid, cpuinfo, croc, crowbook, ctop, cue, curl, curlie, cxxopts, d2, darkhttpd, dasel, dash, dav1d, ddgr, delta, desktop-file-utils, difftastic, diffutils, distcc, dmalloc, dns2tcp, dnslookup, dnsmap, dnsx, dog, doggo, dolt, dos2unix, dot_static, doxygen, dtc, dua, duf]

    runs-on: macos-15-large

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg about
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-15.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg bundle "$item" .tar.xz

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"
              PACKAGE_NAME="${PACKAGE_NAME%@*}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build2:
    strategy:
      fail-fast: false
      matrix:
        pkg: [dufs, duktape, dust, dylibbundler, easyutils, ed, elftool, elvish, epsilon, erdtree, esbuild, ethereum, exa, exhale, exif, exiv2, eza, faac, faad2, fastfetch, fcp, fd, fdroidcl, fff, figlet, file, findent, findutils, fish, flac, flatc, flex, flock, fnm, fontconfig, fontforge, fortune, frei0r, fselect, fsmon, fswatch, fx, fzf, fzy, g, garble, gat, gawk, gbt, gdu, geographiclib, germanium, getopt, gettext-tools, gf, gh, ghostscript, ghr, giflib, git, git-cliff, git-lfs, gitui, gitwatch, glew, glib-tools, glow, glslang, gm4, gmake, gn, gnu-barcode, gnu-which, go-md2man, go-tools, gobject-introspection@1.78, godu, gogs, gojq, golang, gomobile, google-benchmark, gopls, goreleaser, gosh, gotop, gotty, gox, gperf, gping, gpsim, gputils, grep, grex, gron, grpc-plugins, gsed, gtar, gtime, gzip, halibut, helix, helm, help2man, hexdump, hexyl, htop, htslib, httpx, hugo, hunspell, hurl, hydroxide, hyperfine, id3lib, ideviceinstaller, invoice, ixwebsocket, jbig2dec, jemalloc, jfrog-cli, jj, jless, jo, joshuto, jpegoptim, jq, json-glib]

    runs-on: macos-15-large

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg about
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-15.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg bundle "$item" .tar.xz

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"
              PACKAGE_NAME="${PACKAGE_NAME%@*}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build3:
    strategy:
      fail-fast: false
      matrix:
        pkg: [jump, k9s, kcp, kcptun, ko, krb5, lame, lazygit, lcms2, lcov, leptonica, less, lf, libaec, libao, libaria2, libasprintf, libasync++, libb2, libb64, libbcrypt, libblake3, libbrpc, libcaca, libcddb, libcdio, libcerf, libcfitsio, libcgif, libcpuinfo, libcroco, libdb, libduktape, libepoxy, libexhale, libexiv2, libfdk-aac, libflatbuffers, libftgl, libglfw3, libglm, libgpgme, libgraphene, libilbc, libimagequant, libintl-lite, libirecovery, libisoburn, libjpeg, libkrb5, liblinear, liblmdb, libmaxminddb, libmd, libmesalink, libmetalink, libmhash, libmicrohttpd, libmill, libmimalloc, libminiz, libmms, libmpv, libnetpbm, libnng, libopenh264, libp11-kit, libphonenumber, libphysfs, libpipeline, libpkcs11-helper, libpng++, libproj, libpsl, libpugixml, libqalculate, libqpdf, libquiche, libraqm, librasterlite, libraw, libre, libressl, libresvg, librist, librtmp, libsimdjson, libskcms, libsmi, libsndfile, libspectre, libspng, libsrtp, libsvg, libsvm, libtalloc, libtextstyle, libthai, libtinyxml2, libtool, libtorrent-rasterbar, libtwolame, libupnp, libusrsctp, libuuid, libvips, libwasmtime, libwavpack, libwebm, libwmf, libxcrypt, libxml2-python3, libxmlrpc-c, libyajl, libyaml-cpp, libyuv, libzim, libzlog, lief, lighttpd, links, livego, llhttp, lmdb, lodepng, log4cplus, lolcat, lowdown]

    runs-on: macos-15-large

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg about
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-15.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg bundle "$item" .tar.xz

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"
              PACKAGE_NAME="${PACKAGE_NAME%@*}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build4:
    strategy:
      fail-fast: false
      matrix:
        pkg: [lrzip, lsd, lsof, lua, luajit, luau, lunatic, lunzip, lychee, lynx, lz4, lzip, lzo, lzop, magic_enum, mandoc, mawk, mcfly, md4c, mdbook, mdcat, mediainfo, mesa, minisign, miniz, minizip, mist-cli, mksh, mold, mosh, mozjpeg, mozjpeg2, mpg123, mpv, msgpack-c, mujs, mupdf, nano, nanomsg, nap, nasm, navi, ncdu, neofetch, netcat, nethogs, netpbm, nghttp2, nginx, ngtcp2, ninja, nnn, nsh, nspr, ntbtls, nuclei, nushell, oat++, obfs4proxy, oggz, oha, oksh, ollama, onefetch, openal-soft, opencolorio, opencv, openlibm, openmpi, openslide, openssh, orcc, osx-cpu-temp, ouch, p7zip, packcc, patch, patchelf, pbzip2, pcapplusplus, pcre2, pegof, pget, pigz, pjsip, pkg-config, pkgconf, plog, plzip, png, pngcheck, pngquant, pngsplit, poco, ppkg, procs, progress, proj, psimd, psutils, pup, putty, pv, pybind11, python@3.10, python@3.11, python@3.12, python@3.9, q, qemu, qpdf, qrencode, quiche, quickjs, ragel, rang, ranger, rapidjson, rav1e, rbspy, rclone, re2c, redis, restic, resvg, rhash, ripgrep, ripgrep-all]

    runs-on: macos-15-large

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg about
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-15.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg bundle "$item" .tar.xz

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"
              PACKAGE_NAME="${PACKAGE_NAME%@*}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build5:
    strategy:
      fail-fast: false
      matrix:
        pkg: [rlwrap, rover, rsass, rsign2, rsync, rtmpdump, rtorrent, ruby, ruff, rust-analyzer, rustic, rustup-init, samurai, sassc, scc, sccache, scdoc, screenresolution, sd, shc, shell2http, shellharden, shiori, silicon, sjpeg, sl, slang, socat, soundtouch, speex, spirv-tools, sq, sqlite3, starship, stwolame, stylua, subfinder, superfile, supervisord, suricata, svn-lite, svt-av1, swig, syncthing, sysinfo, szip, t1utils, taglib, tarlz, tbox, tcc, tcl, tcpdump, tealdeer, tectonic, tengo, terragrunt, texinfo, tic, tiff, tig, tinysearch, tlrc, tmux, tokei, toml++, toml11, tree, trietool, ttyd, ttygif, ttyrec, tut, tweego, twolame, typos, uctags, unbound, unixodbc, unrar, unxip, unzip, uppm, uppm@0.15.2, uppm@0.15.3, uppm@0.15.4, upx, utf8.h, utfcpp, util-linux, uv, vala, valijson, vapoursynth, vegeta, virustotal-cli, viu, volta, vsftpd, wabt, wasm3, wasmer, wasmtime, watchexec, wavpack, webhook, webp, websocketpp, wget, whois, woff2, wolfssl, x264, x265, xdotool, xh, xmake, xmlto, xmlutils, xmlwf, xorg-libxcursor, xorg-libxdamage, xorg-libxmu, xorg-libxpresent, xorg-libxscrnsaver, xorg-libxshmfence, xorg-libxvmc, xorg-libxxf86vm]

    runs-on: macos-15-large

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg about
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-15.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg bundle "$item" .tar.xz

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"
              PACKAGE_NAME="${PACKAGE_NAME%@*}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build6:
    strategy:
      fail-fast: false
      matrix:
        pkg: [xorg-xinput, xorriso, xpup, xsltproc, xxd, xxhash, xz, yasm, yazi, ycm, youtubedr, yq, yyjson, zellij, zeta, zip, zlib-ng, zls, zola, zopfli, zoxide, zsh, zstd, zsv, zsync]

    runs-on: macos-15-large

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg about
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-15.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg bundle "$item" .tar.xz

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"
              PACKAGE_NAME="${PACKAGE_NAME%@*}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  publish:
    needs: [build1, build2, build3, build4, build5, build6]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls

      - run: |
          set -ex

          TAGNAME="$(date +%Y.%m.%d)"

          sed -i "s|@TAGNAME@|$TAGNAME|" *.yml

          mv *.yml formula/

          DIRNAME="uppm-formula-repository-macos-15.0-x86_64-$TAGNAME"

          install -d "$DIRNAME"

          cp -r formula "$DIRNAME/"

          tar cvJf "$DIRNAME.tar.xz" "$DIRNAME"

          sha256sum *.tar.xz > sha256sums.txt

          cat > notes.md <<EOF
          these packages are created by [xcpkg](https://github.com/leleliu008/xcpkg).

          ## Environment Variables

          **following environment variables should be set for \`git\` package**

          \`\`\`bash
          export GIT_EXEC_PATH="\$GIT_INSTALL_DIR/libexec/git-core"
          export GIT_TEMPLATE_DIR="\$GIT_INSTALL_DIR/share/git-core/templates"
          \`\`\`

          **following environment variables should be set for \`file\` package**

          \`\`\`bash
          export MAGIC="\$FILE_INSTALL_DIR/share/misc/magic.mgc"
          \`\`\`

          ## sha256sum

          \`\`\`
          $(cat sha256sums.txt)
          \`\`\`
          EOF

          gh release create "$TAGNAME" sha256sums.txt --title "$TAGNAME" --notes-file notes.md

          for f in *.tar.xz
          do
            sleep 1s
            gh release upload "$TAGNAME" "$f"
          done

          git config --global user.name  "leleliu008"
          git config --global user.email "leleliu008@gmail.com"

          git pull

          git add formula
          git commit -m "release new version $TAGNAME"
          git push origin master
